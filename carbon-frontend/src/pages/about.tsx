"use client";

import { motion } from "framer-motion";
import Image from "next/image";
import Link from "next/link";
import Head from "next/head";
import Layout from "@/components/Layout";
import { useState } from "react";
import {
  ChartBarIcon,
  MapIcon as OutlineMapIcon,
  DevicePhoneMobileIcon,
  ArrowTrendingUpIcon,
  CpuChipIcon,
  AcademicCapIcon,
  BoltIcon,
  CubeTransparentIcon,
  LightBulbIcon
} from "@heroicons/react/24/outline";

// --- Objek Terjemahan ---
const translations = {
  en: {
    pageTitle: "About | ITB Carbon Emissions Visualization",
    metaDescription: "About the ITB Carbon Emissions Visualization project, its features, and goals.",
    heroTitle1: "ITB Carbon Emissions",
    heroTitle2: "Monitoring Dashboard",
    heroDescription: "A unified platform for tracking, visualizing, and analyzing the carbon footprint from electronic devices across all major ITB campuses.",
    heroButton: "Launch Dashboard",
    sustainabilityTitle: "Sustainable Campus Initiative",
    monitoringTitle: "Multi-Campus Carbon Monitoring",
    monitoringDescription: "This platform provides insights into energy consumption and carbon emissions across ITB campuses to support data-driven sustainability efforts.",
    features: [
      { name: "Geospatial Visualization", description: "Interactive map interface showing carbon emissions across all monitored ITB campuses." },
      { name: "Emission Reporting", description: "Periodic tracking of energy consumption and carbon emissions from monitored electronic devices based on input data." },
      { name: "Device-level Input", description: "Allows for detailed inventory and energy profiling of electronic devices within campus infrastructures." },
      { name: "Trend Analysis", description: "Historical data analysis to understand emission patterns and inform reduction strategies across all campuses." },
    ],
    educationSectionTitle: "Why Monitor Carbon Footprint?",
    educationSectionSubtitle: "Understanding the Impact of Daily Electricity Use",
    educationSectionDescription: "Every electronic device contributes to a carbon footprint, primarily from the electricity it consumes. This platform helps visualize that impact.",
    educationPoints: [
        { name: "From Power Plants to Your Screen", description: "Most electricity is generated by burning fossil fuels, which releases CO₂. The more energy a device uses, the larger its associated carbon footprint.", icon: BoltIcon },
        { name: "Cumulative Impact", description: "While a single device seems small, the combined energy use of thousands of devices across all campuses creates a significant environmental impact.", icon: CubeTransparentIcon },
        { name: "Informed Action", description: "By monitoring these emissions, we can identify hotspots, promote energy-saving habits, and make smarter decisions for a sustainable future.", icon: LightBulbIcon },
    ],
    campusSectionTitle: "Multi-Campus Monitoring",
    campusSectionDescription: "This project monitors energy consumption across all four main ITB campuses. This platform provides a centralized view to analyze and compare their carbon footprints as part of an ongoing data collection effort.",
    campuses: [
      { name: "Ganesha Campus", location: "Bandung" }, { name: "Jatinangor Campus", location: "Sumedang" }, { name: "Cirebon Campus", location: "Cirebon" }, { name: "Jakarta Campus", location: "Jakarta" },
    ],
    analyticsTitle: "Insightful Analytics Dashboard",
    analyticsDescription: "Explore interactive visualizations providing actionable insights into energy consumption patterns and carbon emissions for all monitored campuses.",
    analyticsFeatures: [
      { name: "Campus-Specific Insights", description: "Analyze and compare energy usage and emissions across all ITB campuses, buildings, and facilities." },
      { name: "Device Consumption Analysis", description: "Detailed breakdown of energy consumption by device type and location based on reported usage." },
      { name: "Emission Pattern Identification", description: "Identify key contributors to emissions and potential areas for energy conservation efforts." },
    ],
    exploreDashboard: "Explore Dashboard",
    ctaTitle: "Ready to Drive Sustainability?",
    ctaDescription: "Explore the dashboard, analyze the data, and contribute to understanding and reducing ITB's carbon footprint for a greener future.",
    ctaButton: "Get Started",
  },
  id: {
    pageTitle: "Tentang | Visualisasi Emisi Karbon ITB",
    metaDescription: "Tentang proyek Visualisasi Emisi Karbon ITB, fitur, serta tujuannya.",
    heroTitle1: "Dashboard Pemantauan",
    heroTitle2: "Emisi Karbon ITB",
    heroDescription: "Sebuah platform terpadu untuk melacak, memvisualisasikan, dan menganalisis jejak karbon dari perangkat elektronik di seluruh kampus utama ITB.",
    heroButton: "Buka Dashboard",
    sustainabilityTitle: "Inisiatif Kampus Berkelanjutan",
    monitoringTitle: "Pemantauan Karbon Multi-Kampus",
    monitoringDescription: "Platform ini menyediakan wawasan tentang konsumsi energi dan emisi karbon di seluruh kampus ITB untuk mendukung upaya keberlanjutan berbasis data.",
    features: [
      { name: "Visualisasi Geospasial", description: "Antarmuka peta interaktif yang menampilkan emisi karbon di semua kampus ITB yang dipantau." },
      { name: "Pelaporan Emisi", description: "Pelacakan periodik konsumsi energi dan emisi karbon dari perangkat elektronik yang dipantau berdasarkan data masukan." },
      { name: "Input Tingkat Perangkat", description: "Memungkinkan inventarisasi dan pembuatan profil energi perangkat elektronik secara rinci di dalam infrastruktur kampus." },
      { name: "Analisis Tren", description: "Analisis data historis untuk memahami pola emisi dan menginformasikan strategi pengurangan di semua kampus." },
    ],
    educationSectionTitle: "Mengapa Memantau Jejak Karbon?",
    educationSectionSubtitle: "Memahami Dampak Penggunaan Listrik Sehari-hari",
    educationSectionDescription: "Setiap perangkat elektronik berkontribusi pada jejak karbon, terutama dari listrik yang dikonsumsinya. Platform ini membantu memvisualisasikan dampak tersebut.",
    educationPoints: [
        { name: "Dari Pembangkit Listrik ke Layar Anda", description: "Sebagian besar listrik dihasilkan dari pembakaran bahan bakar fosil yang melepaskan CO₂. Semakin banyak energi yang digunakan perangkat, semakin besar jejak karbonnya.", icon: BoltIcon },
        { name: "Dampak Kumulatif", description: "Meskipun satu perangkat tampak kecil, penggunaan energi gabungan dari ribuan perangkat di semua kampus menciptakan dampak lingkungan yang signifikan.", icon: CubeTransparentIcon },
        { name: "Tindakan Berbasis Informasi", description: "Dengan memantau emisi ini, kita dapat mengidentifikasi titik panas, mempromosikan kebiasaan hemat energi, dan membuat keputusan cerdas untuk masa depan yang berkelanjutan.", icon: LightBulbIcon },
    ],
    campusSectionTitle: "Pemantauan Multi-Kampus",
    campusSectionDescription: "Proyek ini memantau konsumsi energi di empat kampus utama ITB. Platform ini menyediakan tampilan terpusat untuk menganalisis dan membandingkan jejak karbon mereka sebagai bagian dari upaya pengumpulan data yang berkelanjutan.",
    campuses: [
      { name: "Kampus Ganesha", location: "Bandung" }, { name: "Kampus Jatinangor", location: "Sumedang" }, { name: "Kampus Cirebon", location: "Cirebon" }, { name: "Kampus Jakarta", location: "Jakarta" },
    ],
    analyticsTitle: "Dashboard Analitik yang Mendalam",
    analyticsDescription: "Jelajahi visualisasi interaktif yang memberikan wawasan yang dapat ditindaklanjuti mengenai pola konsumsi energi dan emisi karbon untuk semua kampus yang dipantau.",
    analyticsFeatures: [
      { name: "Wawasan Spesifik Kampus", description: "Analisis dan bandingkan penggunaan energi dan emisi di seluruh kampus, gedung, dan fasilitas ITB." },
      { name: "Analisis Konsumsi Perangkat", description: "Rincian detail konsumsi energi berdasarkan jenis perangkat dan lokasi berdasarkan penggunaan yang dilaporkan." },
      { name: "Identifikasi Pola Emisi", description: "Identifikasi kontributor utama emisi dan area potensial untuk upaya konservasi energi." },
    ],
    exploreDashboard: "Jelajahi Dashboard",
    ctaTitle: "Siap Mendorong Keberlanjutan?",
    ctaDescription: "Jelajahi dashboard, analisis data, dan berkontribusi untuk memahami dan mengurangi jejak karbon ITB demi masa depan yang lebih hijau.",
    ctaButton: "Mulai",
  }
};

const featureIcons = [OutlineMapIcon, ChartBarIcon, DevicePhoneMobileIcon, ArrowTrendingUpIcon];
const analyticsIcons = [AcademicCapIcon, CpuChipIcon, ArrowTrendingUpIcon];
const campusImages = ["/itb-gane.jpg", "/itb-jatinangor.jpg", "/itb-cirebon.jpg", "/itb-jakarta.jpg"];

export default function AboutPage() {
  const [lang, setLang] = useState<'en' | 'id'>('en');
  const t = translations[lang];

  return (
    <>
      <Head>
        <title>{t.pageTitle}</title>
        <meta name="description" content={t.metaDescription} />
        <link rel="icon" href="/logo-itb.svg" />
      </Head>

      <Layout>
        <main>
          <div className="relative isolate overflow-hidden bg-slate-900 rounded-b-2xl">
            <div className="absolute inset-0 bg-gradient-to-t from-slate-900 via-slate-900/80 to-transparent -z-10"></div>
            <div className="max-w-7xl mx-auto px-6 py-24 sm:py-32 lg:px-8 relative z-10">
              <motion.div initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }} transition={{ duration: 0.6 }} className="max-w-3xl">
                <h1 className="text-4xl font-bold tracking-tight text-white sm:text-6xl">
                  <span className="block">{t.heroTitle1}</span>
                  <span className="block text-blue-400">{t.heroTitle2}</span>
                </h1>
                <p className="mt-6 text-lg leading-8 text-gray-300">{t.heroDescription}</p>
                <div className="mt-10 flex flex-col sm:flex-row items-start sm:items-center gap-x-6 gap-y-4">
                  <Link href="/" className="group relative overflow-hidden rounded-lg bg-blue-600 px-6 py-3 text-sm font-semibold text-white shadow-lg hover:bg-blue-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-blue-600 transition duration-150 ease-in-out">
                    <span className="absolute inset-0 bg-gradient-to-r from-blue-500 to-blue-700 opacity-0 group-hover:opacity-100 transition-opacity duration-300"></span>
                    <span className="relative z-10">{t.heroButton}</span>
                  </Link>
                  <div className="flex items-center space-x-1 rounded-full bg-slate-800/50 p-1">
                    <button onClick={() => setLang('en')} className={`px-3 py-1 text-sm font-semibold rounded-full transition-colors ${lang === 'en' ? 'bg-white text-slate-800' : 'text-slate-300 hover:bg-slate-700'}`}>EN</button>
                    <button onClick={() => setLang('id')} className={`px-3 py-1 text-sm font-semibold rounded-full transition-colors ${lang === 'id' ? 'bg-white text-slate-800' : 'text-slate-300 hover:bg-slate-700'}`}>ID</button>
                  </div>
                </div>
              </motion.div>
            </div>
          </div>

          <div className="bg-gray-50 py-24 sm:py-32">
              <div className="mx-auto max-w-7xl px-6 lg:px-8">
                  <div className="mx-auto max-w-2xl lg:text-center">
                      <motion.h2 initial={{ opacity: 0, y: 20 }} whileInView={{ opacity: 1, y: 0 }} transition={{ duration: 0.5 }} className="text-base font-semibold leading-7 text-blue-600">{t.sustainabilityTitle}</motion.h2>
                      <motion.p initial={{ opacity: 0, y: 20 }} whileInView={{ opacity: 1, y: 0 }} transition={{ duration: 0.5, delay: 0.1 }} className="mt-2 text-3xl font-bold tracking-tight text-gray-900 sm:text-4xl">{t.monitoringTitle}</motion.p>
                      <motion.p initial={{ opacity: 0, y: 20 }} whileInView={{ opacity: 1, y: 0 }} transition={{ duration: 0.5, delay: 0.2 }} className="mt-6 text-lg leading-8 text-gray-600">{t.monitoringDescription}</motion.p>
                  </div>
                  <div className="mt-20">
                      <div className="grid grid-cols-1 gap-10 sm:grid-cols-2 lg:grid-cols-4">
                      {t.features.map((feature, index) => {
                          const Icon = featureIcons[index];
                          return (
                          <motion.div key={feature.name} initial={{ opacity: 0, y: 50 }} whileInView={{ opacity: 1, y: 0 }} transition={{ duration: 0.5, delay: index * 0.1 }} whileHover={{ y: -8, scale: 1.03, boxShadow: '0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05)' }} className="group relative bg-white p-6 rounded-xl shadow-lg border border-gray-100 transition-all duration-300">
                            <div className="absolute -inset-px rounded-xl bg-gradient-to-r from-cyan-400 via-blue-500 to-indigo-500 opacity-0 group-hover:opacity-100 blur transition-opacity duration-300"></div>
                            <div className="relative z-10">
                                <div className="flex h-12 w-12 items-center justify-center rounded-lg bg-gradient-to-br from-blue-500 to-indigo-600 text-white shadow-md"><Icon className="h-6 w-6" /></div>
                                <h3 className="mt-6 text-lg font-semibold leading-6 text-gray-900">{feature.name}</h3>
                                <p className="mt-2 text-sm leading-6 text-gray-600">{feature.description}</p>
                            </div>
                          </motion.div>
                          );
                      })}
                      </div>
                  </div>
              </div>
          </div>
          
          <div className="bg-white py-24 sm:py-32">
            <div className="mx-auto max-w-7xl px-6 lg:px-8">
              <div className="mx-auto max-w-2xl lg:text-center">
                  <motion.h2 initial={{ opacity: 0, y: 20 }} whileInView={{ opacity: 1, y: 0 }} transition={{ duration: 0.5 }} className="text-base font-semibold leading-7 text-blue-600">{t.educationSectionTitle}</motion.h2>
                  <motion.p initial={{ opacity: 0, y: 20 }} whileInView={{ opacity: 1, y: 0 }} transition={{ duration: 0.5, delay: 0.1 }} className="mt-2 text-3xl font-bold tracking-tight text-gray-900 sm:text-4xl">{t.educationSectionSubtitle}</motion.p>
                  <motion.p initial={{ opacity: 0, y: 20 }} whileInView={{ opacity: 1, y: 0 }} transition={{ duration: 0.5, delay: 0.2 }} className="mt-6 text-lg leading-8 text-gray-600">{t.educationSectionDescription}</motion.p>
              </div>
              <div className="mx-auto mt-16 max-w-2xl sm:mt-20 lg:mt-24 lg:max-w-none">
                <dl className="grid max-w-xl grid-cols-1 gap-x-8 gap-y-16 lg:max-w-none lg:grid-cols-3">
                  {t.educationPoints.map((point) => {
                    const Icon = point.icon;
                    return (
                      <motion.div key={point.name} initial={{ opacity: 0, y: 30 }} whileInView={{ opacity: 1, y: 0 }} transition={{ duration: 0.6, delay: 0.2 }} className="flex flex-col">
                        <dt className="flex items-center gap-x-3 text-base font-semibold leading-7 text-gray-900">
                          <Icon className="h-5 w-5 flex-none text-blue-600" aria-hidden="true" />
                          {point.name}
                        </dt>
                        <dd className="mt-4 flex flex-auto flex-col text-base leading-7 text-gray-600">
                          <p className="flex-auto">{point.description}</p>
                        </dd>
                      </motion.div>
                    );
                  })}
                </dl>
              </div>
            </div>
          </div>

          <div className="bg-gray-50 py-24 sm:py-32">
              <div className="mx-auto max-w-7xl px-6 lg:px-8">
                  <div className="mx-auto max-w-2xl text-center">
                      <motion.h2 initial={{ opacity: 0, y: 20 }} whileInView={{ opacity: 1, y: 0 }} transition={{ duration: 0.5 }} className="text-3xl font-bold tracking-tight text-gray-900 sm:text-4xl">{t.campusSectionTitle}</motion.h2>
                      <motion.p initial={{ opacity: 0, y: 20 }} whileInView={{ opacity: 1, y: 0 }} transition={{ duration: 0.5, delay: 0.1 }} className="mt-6 text-lg leading-8 text-gray-600">{t.campusSectionDescription}</motion.p>
                  </div>
                  <div className="mt-16 grid grid-cols-1 gap-8 md:grid-cols-2 lg:grid-cols-4">
                      {t.campuses.map((campus, index) => (
                      <motion.div key={campus.name} initial={{ opacity: 0, y: 30 }} whileInView={{ opacity: 1, y: 0 }} transition={{ duration: 0.6, delay: 0.2 + index * 0.1 }} className="bg-white p-4 rounded-xl shadow-lg border border-slate-200/80 flex flex-col">
                          <div className="w-full h-60 relative mb-4">
                              <Image src={campusImages[index]} alt={`Image of ${campus.name}`} layout="fill" objectFit="cover" className="rounded-lg" />
                          </div>
                          <h3 className="text-lg font-semibold text-slate-800">{campus.name}</h3>
                          <p className="mt-1 text-sm text-slate-500">{campus.location}</p>
                      </motion.div>
                      ))}
                  </div>
              </div>
          </div>

          <div className="relative bg-slate-900 py-24 sm:py-32">
              <div className="relative mx-auto max-w-7xl px-6 lg:px-8">
                  <div className="mx-auto max-w-2xl lg:max-w-none">
                      <div className="text-center">
                          <motion.h2 initial={{ opacity: 0, y: 20 }} whileInView={{ opacity: 1, y: 0 }} transition={{ duration: 0.5 }} className="text-3xl font-bold tracking-tight text-white sm:text-4xl">{t.analyticsTitle}</motion.h2>
                          <motion.p initial={{ opacity: 0, y: 20 }} whileInView={{ opacity: 1, y: 0 }} transition={{ duration: 0.5, delay: 0.1 }} className="mt-6 text-lg leading-8 text-gray-300 max-w-3xl mx-auto">{t.analyticsDescription}</motion.p>
                      </div>
                      <div className="mt-16 grid grid-cols-1 gap-8 sm:mt-20 sm:grid-cols-2 lg:grid-cols-3">
                      {t.analyticsFeatures.map((feature, index) => {
                          const Icon = analyticsIcons[index];
                          return (
                          <motion.div key={feature.name} initial={{ opacity: 0, scale: 0.9 }} whileInView={{ opacity: 1, scale: 1 }} transition={{ duration: 0.5, delay: index * 0.15 }} className="flex flex-col rounded-2xl bg-white/5 p-8 ring-1 ring-white/10 hover:ring-white/20 transition-all duration-300 backdrop-blur-sm">
                            <Icon className="h-8 w-8 text-blue-400" />
                            <h3 className="mt-6 text-lg font-semibold leading-6 text-white">{feature.name}</h3>
                            <p className="mt-2 flex-1 text-sm leading-6 text-gray-300">{feature.description}</p>
                            <Link href="/" className="mt-4 text-sm font-semibold text-blue-400 hover:text-blue-300 transition-colors">{t.exploreDashboard} <span aria-hidden="true">→</span></Link>
                          </motion.div>
                          );
                      })}
                      </div>
                  </div>
              </div>
          </div>

          <div className="bg-white">
              <div className="mx-auto max-w-7xl px-6 py-24 sm:py-32 lg:px-8">
                  <div className="relative isolate overflow-hidden bg-gradient-to-br from-blue-600 to-indigo-700 px-6 pt-16 shadow-2xl rounded-3xl sm:px-16 md:pt-24 lg:px-24">
                      <svg viewBox="0 0 1024 1024" className="absolute left-1/2 top-1/2 -z-10 h-[64rem] w-[64rem] -translate-y-1/2 [mask-image:radial-gradient(closest-side,white,transparent)] sm:left-full sm:-ml-80 lg:left-1/2 lg:ml-0 lg:-translate-x-1/2 lg:translate-y-0" aria-hidden="true">
                          <circle cx={512} cy={512} r={512} fill="url(#gradient-cta-about-blue)" fillOpacity="0.7" />
                          <defs><radialGradient id="gradient-cta-about-blue"><stop stopColor="#3b82f6" /><stop offset={1} stopColor="#4f46e5" /></radialGradient></defs>
                      </svg>
                      <motion.div initial={{ opacity: 0, x: -50 }} whileInView={{ opacity: 1, x: 0 }} transition={{ duration: 0.6 }} className="mx-auto max-w-2xl text-center">
                          <h2 className="text-3xl font-bold tracking-tight text-white sm:text-4xl">{t.ctaTitle}</h2>
                          <p className="mt-6 text-lg leading-8 text-blue-100">{t.ctaDescription}</p>
                          <div className="mt-10 flex items-center justify-center gap-x-6">
                            <Link href="/" className="rounded-md bg-white px-5 py-2.5 text-sm font-semibold text-blue-700 shadow-sm hover:bg-gray-100 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-white transition-colors">{t.ctaButton}</Link>
                          </div>
                      </motion.div>
                      <motion.div initial={{ opacity: 0, scale: 0.8, y: 50 }} whileInView={{ opacity: 1, scale: 1, y: 0 }} transition={{ duration: 0.6, delay: 0.2, type: 'spring', stiffness: 100 }} className="mt-16 flex justify-center pb-16">
                          <div className="w-full max-w-5xl">
                              <Image className="rounded-xl shadow-2xl ring-1 ring-white/10" src="/carbon-dashboard.png" alt="App screenshot" width={1824} height={1080} />
                          </div>
                      </motion.div>
                  </div>
              </div>
          </div>
        </main>
      </Layout>
    </>
  );
}